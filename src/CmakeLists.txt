# find all source files
file(GLOB LIBJOT_SOURCE_FILES
    "${LIBJOT_SOURCE_DIRECTORY}/*cc"
)
file(GLOB LIBJOT_HEADER_FILES
    "${LIBJOT_SOURCE_DIRECTORY}/*h"
)

# create the object library
add_library(LIBJOT_OBJECT OBJECT
    ${LIBJOT_SOURCE_FILES}
    ${LIBJOT_HEADER_FILES}
)
set_target_properties(LIBJOT_OBJECT
    PROPERTIES
    POSITION_INDEPENDENT_CODE ON
)

# build the static library
if(LIBJOT_BUILD_STATIC)
    message("** Building static library **")
    add_library(LIBJOT_STATIC STATIC
        $<TARGET_OBJECTS:LIBJOT_OBJECT>
    )
    set_target_properties(LIBJOT_STATIC
        PROPERTIES
        ARCHIVE_OUTPUT_DIRECTORY ${LIBJOT_STATIC_OUTPUT_DIRECTORY}
        PREFIX "lib"
        OUTPUT_NAME "JOT"
        SUFFIX ".lib"
    )
endif()

# build the shared library
if(LIBJOT_BUILD_SHARED)
    message("** Building shared library **")
    add_library(LIBJOT_SHARED
        SHARED
        $<TARGET_OBJECTS:LIBJOT_OBJECT>
    )
    set_target_properties(LIBJOT_SHARED
        PROPERTIES
        RUNTIME_OUTPUT_DIRECTORY ${LIBJOT_SHARED_OUTPUT_DIRECTORY}
        LIBRARY_OUTPUT_DIRECTORY ${LIBJOT_SHARED_OUTPUT_DIRECTORY}
        PREFIX "lib"
        OUTPUT_NAME "JOT"
        SUFFIX ".dll"
    )
endif()

# copy the header files to the build directory
if(LIBJOT_BUILD_FULL)
    message("** Copying header files to ${LIBJOT_INCLUDE_OUTPUT_DIRECTORY} **")
    file(COPY ${LIBJOT_HEADER_FILES} DESTINATION "${LIBJOT_INCLUDE_OUTPUT_DIRECTORY}")
endif()